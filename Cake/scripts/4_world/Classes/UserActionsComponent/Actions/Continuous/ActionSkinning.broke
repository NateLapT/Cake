modded class ActionSkinning extends ActionContinuousBase
{
    override void OnFinishProgressServer(ActionData action_data)
    {
        super.OnFinishProgressServer(action_data);
		if (action_data.m_Target) 
               
        {
            EntityAI body;
            Class.CastTo(body, action_data.m_Target.GetObject());
	
		vector GetRandomPos(vector body_pos)

	{
		return body_pos + Vector(Math.RandomFloat01() - 0.5, 0, Math.RandomFloat01() - 0.5);
	}
			ItemBase CreateOrgan(PlayerBase player, vector body_pos, string item_to_spawn, string cfg_skinning_organ_class, ItemBase tool)
	        {
				ItemBase added_item;
			vector pos_rnd = GetRandomPos(body_pos);
			Class.CastTo(added_item,  GetGame().CreateObjectEx(item_to_spawn, pos_rnd, ECE_INITAI|ECE_PLACE_ON_SURFACE));
			}
			
			
			// vector pos_rnd = body.GetPosition() + Vector(Math.RandomFloat01() - 0.5, 0, Math.RandomFloat01() - 0.5);
            // if (body.IsKindOf("ZmbM_CakeAI") && Math.RandomIntInclusive(0, 100) > 70)
            // {
                // Class.CastTo(added_item, GetGame().CreateObject("ZmbM_CakeAITiny", pos_rnd, false, true));
                // Class.CastTo(added_item, GetGame().CreateObjectEx("ZmbM_CakeAITiny", pos_rnd, false, ECE_INITAI | ECE_PLACE_ON_SURFACE));
                // added_item.PlaceOnSurface();
            // }
        // }
     }
}
};